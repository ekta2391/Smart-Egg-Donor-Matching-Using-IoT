/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.DoctorRole;

import Business.Employee.Employee;
import Business.Employee.Recepient;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.RecepientBloodTestWorkRequest;
import Business.WorkQueue.RecepientPhysicalTestWorkRequest;
import Business.WorkQueue.WorkRequest;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

public class ViewRecepientTestResultsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewRecepientRestResultsJPanel
     */
     Enterprise enterprise;
    JPanel userProcessContainer;
    UserAccount userAccount;
    Organization organization;
    Employee recepient;
    public ViewRecepientTestResultsJPanel(JPanel userProcessContainer,Enterprise enterprise,UserAccount userAccount,Organization organization,Employee recepient) {
        initComponents();
         this.userProcessContainer=userProcessContainer;
         this.userAccount=userAccount;
        this.organization=organization;
        this.enterprise=enterprise;
        this.recepient=recepient;
        valueLabel1.setText(recepient.getName());
        populateTable();
        populatePhyTable();
    }

     private void populateTable(){
         DefaultTableModel dtm=(DefaultTableModel)viewResultsJTbl.getModel();
          dtm.setRowCount(0);
          for(UserAccount ua: organization.getUserAccountDirectory().getUserAccountList()){
              for(Employee employee : organization.getEmployeeDirectory().getEmployeeList()){
                  if(employee.getName().equalsIgnoreCase(ua.getEmployee().getName())){
                  for(WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()){
                      
                  
                  if(request instanceof RecepientBloodTestWorkRequest){
                     Object[] row = new Object[6];
                   row[0] = ((RecepientBloodTestWorkRequest)request);
                   row[1] = ((RecepientBloodTestWorkRequest)request).getAntispermAntibodies();
                   row[2] = ((RecepientBloodTestWorkRequest)request).getCompleteBloodCount();
                   row[3] = ((RecepientBloodTestWorkRequest)request).getBloodGroup();
                   row[4] = ((RecepientBloodTestWorkRequest)request).getHemoglobinElectrophoresis();
                   row[5] =  ((RecepientBloodTestWorkRequest)request).getCreatedOn();
                   dtm.addRow(row);  
                  }
              }
              }
              }
          }
     }
          
    
     
     private void populatePhyTable(){
         DefaultTableModel dtm=(DefaultTableModel)phyTestJTbl.getModel();
          dtm.setRowCount(0);
          for(UserAccount ua: organization.getUserAccountDirectory().getUserAccountList()){
          for(Employee employee : organization.getEmployeeDirectory().getEmployeeList()){
           if(employee.getName().equalsIgnoreCase(ua.getEmployee().getName())){
             for(WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()){
              if(request instanceof RecepientPhysicalTestWorkRequest){
                   Object[] row = new Object[6];
                   row[0] = ((RecepientPhysicalTestWorkRequest)request);
                   row[1] = ((RecepientPhysicalTestWorkRequest)request).getBaseLineUltrasound();
                   row[2] = ((RecepientPhysicalTestWorkRequest)request).getCavityCheck();
                   row[3] = ((RecepientPhysicalTestWorkRequest)request).getCysticFibrosis();
                   row[4] = ((RecepientPhysicalTestWorkRequest)request).getCreatedOn();
                   
                 
                   dtm.addRow(row);
              }
    }   
           }   
          }    
         
          } 
         
     }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        viewResultsJTbl = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        valueLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        phyTestJTbl = new javax.swing.JTable();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        viewResultsJTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Recepient ", "Antispermbodies ", "Complete Blood Count", "Blood Group", "Haemoglobinpsirosis", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(viewResultsJTbl);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 97, 788, 90));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Recepient Name:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 11, -1, -1));

        valueLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        valueLabel1.setText("<value>");
        add(valueLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 11, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("BLOOD TEST RESULTS:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 69, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("PHYSICAL CHECK-UP TEST RESULTS:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 231, -1, -1));

        phyTestJTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Recepient", "Baseline UltraSound", "Cavity Check", "Cystic Fibrosis", "Date"
            }
        ));
        jScrollPane2.setViewportView(phyTestJTbl);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 254, 788, 91));
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable phyTestJTbl;
    private javax.swing.JLabel valueLabel1;
    private javax.swing.JTable viewResultsJTbl;
    // End of variables declaration//GEN-END:variables
}
