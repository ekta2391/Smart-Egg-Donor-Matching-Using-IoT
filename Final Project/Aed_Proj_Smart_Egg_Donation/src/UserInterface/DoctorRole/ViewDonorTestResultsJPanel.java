/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.DoctorRole;

import Business.Employee.Donor;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Organization.DonorOrganization;
import Business.Organization.LabOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DonorBloodTestWorkRequest;
import Business.WorkQueue.DonorPhysicalTestWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;


public class ViewDonorTestResultsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewDonorTestResultsJPanel
     */
    Enterprise enterprise;
    JPanel userProcessContainer;
    Employee donor;
    
    DonorPhysicalTestWorkRequest phyRequest;
    UserAccount userAccount;
    Organization organization;
            
    public ViewDonorTestResultsJPanel(JPanel userProcessContainer,Enterprise enterprise,UserAccount userAccount,Organization organization,Employee donor) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
       
        this.userAccount=userAccount;
        this.organization=organization;
        this.enterprise=enterprise;
        this.donor=donor;
        valueLabel1.setText(donor.getName());
        
        populateTable();
        populatePhyTestTbl();
    
    }
     
    public void populatePhyTestTbl() {
 DefaultTableModel dtm=(DefaultTableModel)phyTestJTbl.getModel();
          dtm.setRowCount(0);
          for(UserAccount ua: organization.getUserAccountDirectory().getUserAccountList()){
          for(Employee employee : organization.getEmployeeDirectory().getEmployeeList()){
           if(employee.getName().equalsIgnoreCase(ua.getEmployee().getName())){
             for(WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()){
              if(request instanceof DonorPhysicalTestWorkRequest){
                   Object[] row = new Object[6];
                   row[0] = ((DonorPhysicalTestWorkRequest)request);
                   row[1] = ((DonorPhysicalTestWorkRequest)request).getBaseLineUltrasound();
                   row[2] = ((DonorPhysicalTestWorkRequest)request).getCavityCheck();
                   row[3] = ((DonorPhysicalTestWorkRequest)request).getCysticFibrosis();
                   row[4] = ((DonorPhysicalTestWorkRequest)request).getCreatedOn();
                   
                 
                   dtm.addRow(row);
              }
    }   
           }   
          }    
         
          }
    }


    
    
    private void populateTable(){
         DefaultTableModel dtm=(DefaultTableModel)viewResultsJTbl.getModel();
          dtm.setRowCount(0);
          
          for(UserAccount ua : organization.getUserAccountDirectory().getUserAccountList()){
           for(Employee employee : organization.getEmployeeDirectory().getEmployeeList()){
             if(employee.getName().equalsIgnoreCase(ua.getEmployee().getName())){
                 for(WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()){
                     if(request instanceof DonorBloodTestWorkRequest){
                          Object[] row = new Object[7];
                   row[0] = ((DonorBloodTestWorkRequest)request);
                   row[1] = ((DonorBloodTestWorkRequest)request).getAntispermAntibodies();
                   row[2] = ((DonorBloodTestWorkRequest)request).getCompleteBloodCount();
                   row[3] = ((DonorBloodTestWorkRequest)request).getBloodGroup();
                   row[4] = ((DonorBloodTestWorkRequest)request).getHemoglobinElectrophoresis();
                   row[5] = ((DonorBloodTestWorkRequest)request).getCreatedOn();
                   dtm.addRow(row);
                     }
                 }
             }
                 
             }
                 
             }   
           }    
          
       

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        viewResultsJTbl = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        valueLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        phyTestJTbl = new javax.swing.JTable();
        backBtn = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        viewResultsJTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Donor ", "Antispermbodies ", "Complete Blood Count", "Blood Group", "Haemoglobinpsirosis", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(viewResultsJTbl);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 97, 788, 90));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Donor Name:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 11, -1, -1));

        valueLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        valueLabel1.setText("<value>");
        add(valueLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(172, 11, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("BLOOD TEST RESULTS:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 69, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("PHYSICAL CHECK-UP TEST RESULTS:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 231, -1, -1));

        phyTestJTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Donor", "Baseline UltraSound", "Cavity Check", "Cystic Fibrosis", "Date"
            }
        ));
        jScrollPane2.setViewportView(phyTestJTbl);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 254, 788, 91));

        backBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        backBtn.setText("BACK");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 413, 95, 43));
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
 userProcessContainer.remove(this);
        

        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);    }//GEN-LAST:event_backBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable phyTestJTbl;
    private javax.swing.JLabel valueLabel1;
    private javax.swing.JTable viewResultsJTbl;
    // End of variables declaration//GEN-END:variables

}